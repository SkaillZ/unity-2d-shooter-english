<html xmlns:og="http://ogp.me/ns#" xmlns:fb="http://www.facebook.com/2008/fbml" class=" js flexbox flexboxlegacy canvas canvastext webgl no-touch geolocation postmessage no-websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients no-cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!-- base href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/09.html" --><style type="text/css">body { margin-left:0;margin-right:0;margin-top:0; }#google-cache-hdr {background:#f5f5f5 !important;font:13px arial,sans-serif !important;text-align:left !important;color:#202020 !important;border:0 !important;margin:0 !important;border-bottom:1px solid #cecece !important;line-height:16px !important ;padding:16px 28px 24px 28px !important;}#google-cache-hdr * {display:inline !important;font:inherit !important;text-align:inherit !important;color:inherit !important;line-height:inherit !important;background:none !important;border:0 !important;margin:0 !important;padding:0 !important;letter-spacing:0 !important;}#google-cache-hdr a {text-decoration:none !important;color:#1a0dab !important;}#google-cache-hdr a:hover { text-decoration:underline !important; }#google-cache-hdr a:visited { color:#609 !important; }#google-cache-hdr div { display:block !important;margin-top:4px !important; }#google-cache-hdr b {font-weight:bold !important;display:inline-block !important;direction:ltr !important;}</style></head><body class="developer-document" onload="addClass();prettyPrint()"><div id="google-cache-hdr" dir="ltr"><div>Dies ist der Cache von Google von <a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/09.html" dir="ltr">http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/09.html</a>. Es handelt sich dabei um ein Abbild der Seite, wie diese am 3. Okt. 2015 06:52:27 GMT angezeigt wurde. </div><div>Die <a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/09.html" dir="ltr">aktuelle Seite</a> sieht mittlerweile eventuell anders aus. <a href="http://support.google.com/websearch/bin/answer.py?hl=de&amp;p=cached&amp;answer=1687222">Weitere Informationen</a></div><div></div><div><span style="display:inline-block !important;margin-top:8px !important;margin-right:104px !important;white-space:nowrap !important;"><span style="margin-right:28px !important;"><span style="font-weight:bold !important;">Vollständige Version</span></span><span style="margin-right:28px !important;"><a href="http://webcache.googleusercontent.com/search?q=cache:sSDM9k-18GgJ:japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/09.html&amp;hl=de&amp;gl=at&amp;strip=1&amp;vwsrc=0">Nur-Text-Version</a></span><span style="margin-right:28px !important;"><a href="http://webcache.googleusercontent.com/search?q=cache:sSDM9k-18GgJ:japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/09.html&amp;hl=de&amp;gl=at&amp;strip=0&amp;vwsrc=1">Quelle anzeigen</a></span></span><span style="display:inline-block !important;margin-top:8px !important;color:#717171 !important;">Tipp: Um Ihren Suchbegriff schnell auf dieser Seite zu finden, drücken Sie <b>Strg+F</b> bzw. <b>⌘-F</b> (Mac) und verwenden Sie die Suchleiste.</span></div></div><div style="position:relative;">




   <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- InstanceBeginEditable name="doctitle" -->
  <!-- InstanceEndEditable -->
  <link rel="shortcut icon" href="http://japan.unity3d.com/resources/favicons/favicon.ico">
  <link rel="icon" type="image/png" href="http://japan.unity3d.com/resources/favicons/favicon.png">
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="http://japan.unity3d.com/resources/favicons/apple-touch-icon-144x144.png">
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="http://japan.unity3d.com/resources/favicons/apple-touch-icon-114x114.png">
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="http://japan.unity3d.com/resources/favicons/apple-touch-icon-72x72.png">
  <link rel="apple-touch-icon-precomposed" href="http://japan.unity3d.com/resources/favicons/apple-touch-icon.png">

  <!-- META -->
  <meta name="description" content="Unity は、Windows と OS X 上で動作する統合型のゲーム開発環境です。iOS、Android、Windows、Mac OS X、Web、Wii U、PlayStation3、Xbox 360 など様々なプラットフォームへ向けた高度な 3D アプリケーションを制作することが出来ます。">
  <meta name="author" content="Unity Technologies">
  <meta property="og:title" content="Unity: 統合ゲーム開発環境">
  <meta property="og:type" content="company">
  <meta property="og:url" content="http://japan.unity3d.com/">
  <meta property="og:image" content="http://japan.unity3d.com/resources/favicons/fb-icon.png">
  <meta property="og:description" content="Unity は、スマートフォンや PC、Webブラウザ、コンシューマ機上でハイクオリティーなゲームを実現する開発プラットフォームです。">
  <meta property="og:site_name" content="Unity Japan 公式サイト">

  <!-- ASSETS -->
  <script src="Restricting%20Movement,%20and%20Other%20Tweaks-Dateien/ga.js" async="" type="text/javascript"></script><script src="Restricting%20Movement,%20and%20Other%20Tweaks-Dateien/jquery_002.js" type="text/javascript"></script>
  <script type="text/javascript" src="Restricting%20Movement,%20and%20Other%20Tweaks-Dateien/unity-core.js"></script>
  <link rel="stylesheet" type="text/css" href="Restricting%20Movement,%20and%20Other%20Tweaks-Dateien/core.css">
  <link rel="stylesheet" type="text/css" href="Restricting%20Movement,%20and%20Other%20Tweaks-Dateien/resp.css">
  <!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/resources/stylesheets/ie.css" /><![endif]-->
  <link rel="alternate" type="application/rss+xml" title="RSS" href="http://unity3d.com/news.rss">
  <!-- InstanceBeginEditable name="header" -->
    <script type="text/javascript" src="Restricting%20Movement,%20and%20Other%20Tweaks-Dateien/jquery.js"></script>
  <!-- InstanceEndEditable -->
  <link rel="stylesheet" type="text/css" href="Restricting%20Movement,%20and%20Other%20Tweaks-Dateien/index.css">
  <link rel="stylesheet" type="text/css" href="Restricting%20Movement,%20and%20Other%20Tweaks-Dateien/jp.css">
  <link rel="stylesheet" type="text/css" href="Restricting%20Movement,%20and%20Other%20Tweaks-Dateien/prettify.css">
  <link rel="stylesheet" type="text/css" href="Restricting%20Movement,%20and%20Other%20Tweaks-Dateien/style.css">
  <script type="text/javascript" src="Restricting%20Movement,%20and%20Other%20Tweaks-Dateien/prettify.js"></script>
  
  <script type="text/javascript">
    function addClass(){
        $(".source-code pre").addClass("prettyprint");
    }
  </script>
  <title>Restricting Movement, and Other Tweaks</title>


  <div id="master-wrapper">
  <div class="background"></div>
  <header id="master-header" class="master-header" role="main-header">
    <div class="header-wrapper">
      <div class="lang">
        <div class="lbl animate" data-values="lang-selector|width|105|1">言語を切り替え</div>
        <div class="flag flag-jp current tt" data-distance="38|28|bottom"><div class="tip">日本語</div></div>
        <div id="lang-selector" class="lang-selector">
          <div class="flag flag-en tt" data-distance="38|28|bottom"><a href="http://unity3d.com/"></a><div class="tip">English</div></div>
          <div class="flag flag-cn tt" data-distance="38|28|bottom"><a href="http://china.unity3d.com/"></a><div class="tip">中文</div></div>
          <div class="flag flag-es tt" data-distance="38|28|bottom"><a href="http://spanish.unity3d.com/"></a><div class="tip">Español</div></div>
          <div class="flag flag-kr tt" data-distance="38|28|bottom"><a href="http://www.unity3dkorea.com/"></a><div class="tip">한국어</div></div>
          <div class="flag flag-pt tt" data-distance="38|28|bottom"><a href="http://portuguese.unity3d.com/"></a><div class="tip">Portugués</div></div>
          <div class="flag flag-ru tt" data-distance="38|28|bottom"><a href="http://russia.unity3d.com/"></a><div class="tip">Pусский</div></div>
        </div>
      </div>
      <div class="clear"></div>
      <nav class="top-nav">
        <ul>
          <li class="tn-icon"><a href="http://japan.unity3d.com/">Home</a></li>
          <li class="tn-unity"><a href="http://japan.unity3d.com/unity">Unity</a></li>
          <li class="tn-gallery"><a href="http://japan.unity3d.com/gallery">Gallery</a></li>
          <li class="tn-store"><a href="http://japan.unity3d.com/store">Store</a></li>
          <li class="tn-assetstore"><a href="http://japan.unity3d.com/asset-store">Asset Store</a></li>
          <li class="tn-developer selected"><a href="http://japan.unity3d.com/developer">Developer</a></li>
          <li class="tn-company"><a href="http://japan.unity3d.com/company">Company</a></li>
          <li class="tn-download"><a href="http://japan.unity3d.com/unity/download">Download</a></li>
        </ul>
      </nav>
      <nav class="sub-nav">
        <ul id="sn-unity" style="display:none;">
          <li class="sn-unity-workflow jp"><a href="http://japan.unity3d.com/unity/workflow">ワークフロー</a></li>
          <li class="sn-unity-quality jp"><a href="http://japan.unity3d.com/unity/quality">クオリティー</a></li>
          <li class="sn-unity-mecanim"><a href="http://japan.unity3d.com/unity/mecanim">Mecanim</a></li>
          <li class="sn-unity-performance jp"><a href="http://japan.unity3d.com/unity/performance">パフォーマンス</a></li>
          <li class="sn-unity-multiplatform jp"><a href="http://japan.unity3d.com/unity/multiplatform">マルチプラットフォーム</a></li>
          <li class="sn-unity-collaboration jp"><a href="http://japan.unity3d.com/unity/collaboration">コラボレーション</a></li>
          <li class="sn-unity-whatsnew jp"><a href="http://japan.unity3d.com/unity/whats-new">アップデート情報</a></li>
        </ul>
        <ul id="sn-gallery" style="display:none;">
          <li class="sn-gallery-madewith"><a href="http://japan.unity3d.com/gallery/made-with-unity/game-list">Made With Unity</a></li>
          <li class="sn-gallery-demos"><a href="http://japan.unity3d.com/gallery/demos">Demos By Unity</a></li>
        </ul>
        <ul id="sn-assetstore" style="display:none;">
          <li class="sn-assetstore-browse"><a href="https://www.assetstore.unity3d.com/" target="_blank">ブラウズ</a></li>
          <li class="sn-assetstore-onlineservices jp"><a href="http://japan.unity3d.com/asset-store/online-services">オンラインサービス</a></li>
          <li class="sn-assetstore-submit jp"><a href="http://japan.unity3d.com/asset-store/submit-content">コンテンツ提出</a></li>
        </ul>
        <ul id="sn-developer">
          <li class="sn-developer-document jp selected"><a href="http://japan.unity3d.com/developer/document">ドキュメント</a></li>
          <li class="sn-developer-resource jp"><a href="http://japan.unity3d.com/developer/resource">リソース</a></li>
        </ul>
        <ul id="sn-community" style="display:none;">
          <li class="sn-community-forum jp"><a href="http://forum.unity3d.com/" target="_blank">フォーラム</a></li>
          <li class="sn-community-answers jp"><a href="http://answers.unity3d.com/" target="_blank">アンサー</a></li>
          <li class="sn-community-feedback jp"><a href="http://feedback.unity3d.com/" target="_blank">フィードバック</a></li>
        </ul>
        <ul id="sn-company" style="display:none;">
          <li class="sn-company-people jp"><a href="http://japan.unity3d.com/company/people">スタッフ</a></li>
          <li class="sn-company-jobs jp"><a href="http://japan.unity3d.com/company/jobs/overview">採用情報</a></li>
          <li class="sn-company-events jp"><a href="http://japan.unity3d.com/company/events">イベント</a></li>
          <li class="sn-company-pr jp"><a href="http://japan.unity3d.com/company/public-relations">広報</a></li>
          <li class="sn-company-union jp"><a href="http://japan.unity3d.com/company/union">Union</a></li>
          <li class="sn-company-reseller jp"><a href="http://japan.unity3d.com/company/reseller">代理店</a></li>
          <li class="sn-company-blog jp"><a href="http://japan.unity3d.com/blog">ブログ</a></li>
          <li class="sn-company-access jp"><a href="http://japan.unity3d.com/company/access">アクセス</a></li>
          <li class="sn-company-contact jp"><a href="http://japan.unity3d.com/company/contact">お問い合わせ</a></li>
          <li class="sn-company-legal jp"><a href="http://japan.unity3d.com/company/legal">リーガル</a></li>
        </ul>
        <ul id="sn-unite" style="display:none;">
          <li class="sn-unite-unite"><a href="http://japan.unity3d.com/unite/">Unite 2014</a></li>
          <li class="sn-unite-archive"><a href="http://japan.unity3d.com/unite/archive">アーカイブ</a></li>
        </ul>
      </nav>
    </div>
  </header>
  <section id="content-container" class="content-container">
    <header class="mq-header clear">
      <div class="mq-icon"><a href="http://japan.unity3d.com/developer/"></a></div>
      <div class="mq-langbtn rel">
        <div class="flag flag-jp"></div>
        <div id="flag-list"></div>
      </div>
       <div class="mq-navbtn"><div class="icon-bar"></div><div class="icon-bar"></div><div class="icon-bar"></div></div>
    </header>
    <!-- InstanceBeginEditable name="main-content" -->
      <div class="hero"><div class="sams"><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/">Shooting Game</a></div></div>
      <nav class="section-nav nav-stuck">
        <div class="g12"><div class="wrap"><h2></h2>
          <ul>
            
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/01.html">cp01</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/02.html">cp02</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/03.html">cp03</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/04.html">cp04</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/05.html">cp05</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/06.html">cp06</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/07.html">cp07</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/08.html">cp08</a></li>
              
              <li class="selected"><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/09.html">cp09</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/10.html">cp10</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/11.html">cp11</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/12.html">cp12</a></li>
          <li class="top"></li></ul>
        </div></div>
      </nav>

    <section id="content" class="content-wrapper gw clear 2d-shooting-game">


      <!-- <nav class="quickjump shrink pos-fix" data-pos-fix-off-y="50">
        <div class="header">
          <h3>Quick jump:</h3>
          <div class="clear"></div>
        </div>
        <ul class="simple">
          <li><a href="#ss01">第 1 回　世界の「骨格」をつくろう</a></li>
          <li><a href="#ss02">Unity を手に入れる</a></li>
          <li><a href="#ss03">Unity の統合開発環境</a></li>
          <li><a href="#ss04">必要なパーツを配置しよう</a></li>
          <li><a href="#ss05">はじめてのスクリプト</a></li>
          <li><a href="#ss06">まとめと次回のテーマ</a></li>
          <li><a href="#ss07">プロジェクトファイルをダウンロード</a></li>
        </ul>
      </nav> -->

<section class="content">

       <article>
        <div style="float:right"><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game/game/09.html">日本語</a> | English</div>
        <div class="clear"></div>
      </article>


    <h1><a id="h9"></a>Chapter 9. Restricting Movement, and Other Tweaks</h1>
<p>We added sound in the last chapter.</p>
<p>For this chapter, we’ll take a short look at various fixes and improvements we can make.</p>

<h2><a id="h9-1"></a>9.1. Restricting Player Movement</h2>
<p>Currently, the player can move outside of the screen. Let’s make it 
so that the player can only move within the bounds of the game screen.</p>
<p>To achieve this, we’ll use the camera’s view port, and the Mathf.Clamp function.</p>
<div class="column">

<h3><a id="column-27"></a>View Port</h3>
<p>The viewport sets the visible bounds of the camera. It uses normalized values, that is, between 0 and 1.</p>
<p>Normally we want to fill the screen, so set the values to <b>X 0 Y 0 Width 1 Height 1</b>.</p>
<div class="image">
<img src="img/1.png" alt="">
</div>
<p>For more details, see <a href="http://docs.unity3d.com/Documentation/Components/class-Camera.html" class="link">Camera</a> in the documentation.</p>
</div>
<p>Now, to properly restrict the player’s movements, it’s necessary to 
have the game screen size set to 600x450. Double-check that your 
settings are correct.</p>
<div class="image">
<img src="img/2.png" alt="">
</div>

<h3><a id="h9-1-1"></a>Fixing the Bounds of DestroyArea</h3>
<p>Make it so that DestroyArea has the same bounds as the camera and background. Set the <b>Box Collider 2D</b> component’s <b>Size to X 8 Y 6</b>.</p>
<div class="image">
<img src="img/3.png" alt="Identical bounds to the camera and background.">
<p class="caption">
Figure 9.1: Identical bounds to the camera and background.
</p>
</div>

<h3><a id="h9-1-2"></a>Changing the Player Movement Method</h3>
<p>Here we’ll change the way the player moves.</p>
<p>We could use Mathf.Clamp to enforce the player’s movement restrictions, by clamping the position information in <b>transform.position</b>.</p>
<p>But when the position is updated through the physics system (like 
with rigidbody2D.velocity) Mathf.Clamp can cause some undesired effects.</p>
<p>So, what we have to do is apply the movement restrictions after the 
movements of the physics system. That is, when moving outside the 
acceptable bounds, we must force the player back.</p>
<p>Let’s see how this is done.</p>
<p>We’ll add more code to Player.cs (specifically, the Clamp method)</p>
<div class="source-code">
<p class="caption">Player.cs</p>
<pre style="" class="source prettyprint prettyprinted"><span class="kwd">using</span><span class="pln"> </span><span class="typ">UnityEngine</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Collections</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Player</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">MonoBehaviour</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
        </span><span class="com">// Spaceship Component</span><span class="pln">
        </span><span class="typ">Spaceship</span><span class="pln"> spaceship</span><span class="pun">;</span><span class="pln">

        </span><span class="typ">IEnumerator</span><span class="pln"> </span><span class="typ">Start</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Get the Spaceship component</span><span class="pln">
                spaceship </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GetComponent</span><span class="pun">&lt;</span><span class="typ">Spaceship</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">();</span><span class="pln">

                </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">true</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

                        </span><span class="com">// Make a bullet with the player’s position/rotation</span><span class="pln">
                        spaceship</span><span class="pun">.</span><span class="typ">Shot</span><span class="pln"> </span><span class="pun">(</span><span class="pln">transform</span><span class="pun">);</span><span class="pln">

                        </span><span class="com">// Make a shot sound effect</span><span class="pln">
                        audio</span><span class="pun">.</span><span class="typ">Play</span><span class="pun">();</span><span class="pln">

                        </span><span class="com">// Wait for shotDelay seconds</span><span class="pln">
                        </span><span class="kwd">yield</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WaitForSeconds</span><span class="pln"> </span><span class="pun">(</span><span class="pln">spaceship</span><span class="pun">.</span><span class="pln">shotDelay</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Update</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Right, Left</span><span class="pln">
                </span><span class="kwd">float</span><span class="pln"> x </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Input</span><span class="pun">.</span><span class="typ">GetAxisRaw</span><span class="pln"> </span><span class="pun">(</span><span class="str">"Horizontal"</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Up, Down</span><span class="pln">
                </span><span class="kwd">float</span><span class="pln"> y </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Input</span><span class="pun">.</span><span class="typ">GetAxisRaw</span><span class="pln"> </span><span class="pun">(</span><span class="str">"Vertical"</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Get the direction of movement</span><span class="pln">
                </span><span class="typ">Vector2</span><span class="pln"> direction </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Vector2</span><span class="pln"> </span><span class="pun">(</span><span class="pln">x</span><span class="pun">,</span><span class="pln"> y</span><span class="pun">).</span><span class="pln">normalized</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Move</span><span class="pln">
                spaceship</span><span class="pun">.</span><span class="typ">Move</span><span class="pln"> </span><span class="pun">(</span><span class="pln">direction</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Restrict the movement</span><span class="pln">
                </span><span class="typ">Clamp</span><span class="pun">();</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Clamp</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Get the lower-left world coordinate of the viewport.</span><span class="pln">
                </span><span class="typ">Vector2</span><span class="pln"> min </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Camera</span><span class="pun">.</span><span class="pln">main</span><span class="pun">.</span><span class="typ">ViewportToWorldPoint</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Vector2</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">));</span><span class="pln">

                </span><span class="com">// Get the upper-right world coordinate of the viewport.</span><span class="pln">
                </span><span class="typ">Vector2</span><span class="pln"> max </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Camera</span><span class="pun">.</span><span class="pln">main</span><span class="pun">.</span><span class="typ">ViewportToWorldPoint</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Vector2</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">));</span><span class="pln">

                </span><span class="com">// Get the coordinates of the player</span><span class="pln">
                </span><span class="typ">Vector2</span><span class="pln"> pos </span><span class="pun">=</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">position</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Restrict the player from moving outside of the screen.</span><span class="pln">
                pos</span><span class="pun">.</span><span class="pln">x </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Mathf</span><span class="pun">.</span><span class="typ">Clamp</span><span class="pln"> </span><span class="pun">(</span><span class="pln">pos</span><span class="pun">.</span><span class="pln">x</span><span class="pun">,</span><span class="pln"> min</span><span class="pun">.</span><span class="pln">x</span><span class="pun">,</span><span class="pln"> max</span><span class="pun">.</span><span class="pln">x</span><span class="pun">);</span><span class="pln">
                pos</span><span class="pun">.</span><span class="pln">y </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Mathf</span><span class="pun">.</span><span class="typ">Clamp</span><span class="pln"> </span><span class="pun">(</span><span class="pln">pos</span><span class="pun">.</span><span class="pln">y</span><span class="pun">,</span><span class="pln"> min</span><span class="pun">.</span><span class="pln">y</span><span class="pun">,</span><span class="pln"> max</span><span class="pun">.</span><span class="pln">y</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Assign the newly-restricted position value.</span><span class="pln">
                transform</span><span class="pun">.</span><span class="pln">position </span><span class="pun">=</span><span class="pln"> pos</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Called at the moment of impact.</span><span class="pln">
        </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">OnTriggerEnter2D</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Collider2D</span><span class="pln"> c</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Get the layer name</span><span class="pln">
                </span><span class="kwd">string</span><span class="pln"> layerName </span><span class="pun">=</span><span class="pln"> </span><span class="typ">LayerMask</span><span class="pun">.</span><span class="typ">LayerToName</span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="pln">gameObject</span><span class="pun">.</span><span class="pln">layer</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Delete the bullet if the layer name is “Bullet (Enemy)”</span><span class="pln">
                </span><span class="kwd">if</span><span class="pun">(</span><span class="pln"> layerName </span><span class="pun">==</span><span class="pln"> </span><span class="str">"Bullet (Enemy)"</span><span class="pun">)</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                        </span><span class="com">// Delete the bullet</span><span class="pln">
                        </span><span class="typ">Destroy</span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="pln">gameObject</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">

                </span><span class="com">// Explode if the layer name is “Bullet (Enemy)” or “Enemy”</span><span class="pln">
                </span><span class="kwd">if</span><span class="pun">(</span><span class="pln"> layerName </span><span class="pun">==</span><span class="pln"> </span><span class="str">"Bullet (Enemy)"</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> layerName </span><span class="pun">==</span><span class="pln"> </span><span class="str">"Enemy"</span><span class="pun">)</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                        </span><span class="com">// Explode</span><span class="pln">
                        spaceship</span><span class="pun">.</span><span class="typ">Explosion</span><span class="pun">();</span><span class="pln">

                        </span><span class="com">// Delete the player</span><span class="pln">
                        </span><span class="typ">Destroy</span><span class="pln"> </span><span class="pun">(</span><span class="pln">gameObject</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre>
</div>
<p>Now, start the game and move the player to the edge of the screen. The player should be deleted.</p>
<p>Figure 9.2 shows the player at (-4, -3), on the edge of the screen. 
Because the player’s collider was originally inside of the DestroyArea 
collider, you might not expect OnTriggerExit2D to be called, but 
unfortunately, it does.</p>
<div class="image">
<img src="img/4.png" alt="">
<p class="caption">
Figure 9.2: 
</p>
</div>
<p>So, instead of moving via rigidbody2D.velocity, we’ll use transform.position.</p>
<div class="source-code">
<p class="caption">Player.cs</p>
<pre style="" class="source prettyprint prettyprinted"><span class="kwd">using</span><span class="pln"> </span><span class="typ">UnityEngine</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Collections</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Player</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">MonoBehaviour</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
        </span><span class="com">// Spaceship Component</span><span class="pln">
        </span><span class="typ">Spaceship</span><span class="pln"> spaceship</span><span class="pun">;</span><span class="pln">

        </span><span class="typ">IEnumerator</span><span class="pln"> </span><span class="typ">Start</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Get the Spaceship component</span><span class="pln">
                spaceship </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GetComponent</span><span class="pun">&lt;</span><span class="typ">Spaceship</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">();</span><span class="pln">

                </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">true</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

                        </span><span class="com">// Make a bullet with the player’s position/rotation</span><span class="pln">
                        spaceship</span><span class="pun">.</span><span class="typ">Shot</span><span class="pln"> </span><span class="pun">(</span><span class="pln">transform</span><span class="pun">);</span><span class="pln">

                        </span><span class="com">// Make a shot sound effect</span><span class="pln">
                        audio</span><span class="pun">.</span><span class="typ">Play</span><span class="pun">();</span><span class="pln">

                        </span><span class="com">// Wait for shotDelay seconds</span><span class="pln">
                        </span><span class="kwd">yield</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WaitForSeconds</span><span class="pln"> </span><span class="pun">(</span><span class="pln">spaceship</span><span class="pun">.</span><span class="pln">shotDelay</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Update</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Right, Left</span><span class="pln">
                </span><span class="kwd">float</span><span class="pln"> x </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Input</span><span class="pun">.</span><span class="typ">GetAxisRaw</span><span class="pln"> </span><span class="pun">(</span><span class="str">"Horizontal"</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Up, Down</span><span class="pln">
                </span><span class="kwd">float</span><span class="pln"> y </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Input</span><span class="pun">.</span><span class="typ">GetAxisRaw</span><span class="pln"> </span><span class="pun">(</span><span class="str">"Vertical"</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Get the direction of movement</span><span class="pln">
                </span><span class="typ">Vector2</span><span class="pln"> direction </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Vector2</span><span class="pln"> </span><span class="pun">(</span><span class="pln">x</span><span class="pun">,</span><span class="pln"> y</span><span class="pun">).</span><span class="pln">normalized</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Move with restrictions</span><span class="pln">
                </span><span class="typ">Move</span><span class="pln"> </span><span class="pun">(</span><span class="pln">direction</span><span class="pun">);</span><span class="pln">

        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Ship movement</span><span class="pln">
        </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Move</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Vector2</span><span class="pln"> direction</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Get the lower-left world coordinate of the viewport.</span><span class="pln">
                </span><span class="typ">Vector2</span><span class="pln"> min </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Camera</span><span class="pun">.</span><span class="pln">main</span><span class="pun">.</span><span class="typ">ViewportToWorldPoint</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Vector2</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">));</span><span class="pln">

                </span><span class="com">// Get the upper-right world coordinate of the viewport.</span><span class="pln">
                </span><span class="typ">Vector2</span><span class="pln"> max </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Camera</span><span class="pun">.</span><span class="pln">main</span><span class="pun">.</span><span class="typ">ViewportToWorldPoint</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Vector2</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">));</span><span class="pln">

                </span><span class="com">// Get the coordinates of the player</span><span class="pln">
                </span><span class="typ">Vector2</span><span class="pln"> pos </span><span class="pun">=</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">position</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Move by the proper amount</span><span class="pln">
                pos </span><span class="pun">+=</span><span class="pln"> direction  </span><span class="pun">*</span><span class="pln"> spaceship</span><span class="pun">.</span><span class="pln">speed </span><span class="pun">*</span><span class="pln"> </span><span class="typ">Time</span><span class="pun">.</span><span class="pln">deltaTime</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Restrict the player from moving outside of the screen.</span><span class="pln">
                pos</span><span class="pun">.</span><span class="pln">x </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Mathf</span><span class="pun">.</span><span class="typ">Clamp</span><span class="pln"> </span><span class="pun">(</span><span class="pln">pos</span><span class="pun">.</span><span class="pln">x</span><span class="pun">,</span><span class="pln"> min</span><span class="pun">.</span><span class="pln">x</span><span class="pun">,</span><span class="pln"> max</span><span class="pun">.</span><span class="pln">x</span><span class="pun">);</span><span class="pln">
                pos</span><span class="pun">.</span><span class="pln">y </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Mathf</span><span class="pun">.</span><span class="typ">Clamp</span><span class="pln"> </span><span class="pun">(</span><span class="pln">pos</span><span class="pun">.</span><span class="pln">y</span><span class="pun">,</span><span class="pln"> min</span><span class="pun">.</span><span class="pln">y</span><span class="pun">,</span><span class="pln"> max</span><span class="pun">.</span><span class="pln">y</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Assign the newly-restricted position value.</span><span class="pln">
                transform</span><span class="pun">.</span><span class="pln">position </span><span class="pun">=</span><span class="pln"> pos</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Called at the moment of impact.</span><span class="pln">
        </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">OnTriggerEnter2D</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Collider2D</span><span class="pln"> c</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Get the layer name</span><span class="pln">
                </span><span class="kwd">string</span><span class="pln"> layerName </span><span class="pun">=</span><span class="pln"> </span><span class="typ">LayerMask</span><span class="pun">.</span><span class="typ">LayerToName</span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="pln">gameObject</span><span class="pun">.</span><span class="pln">layer</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Delete the bullet if the layer name is “Bullet (Enemy)”</span><span class="pln">
                </span><span class="kwd">if</span><span class="pun">(</span><span class="pln"> layerName </span><span class="pun">==</span><span class="pln"> </span><span class="str">"Bullet (Enemy)"</span><span class="pun">)</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                        </span><span class="com">// Delete the bullet</span><span class="pln">
                        </span><span class="typ">Destroy</span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="pln">gameObject</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">

                </span><span class="com">// Explode if the layer name is “Bullet (Enemy)” or “Enemy”</span><span class="pln">
                </span><span class="kwd">if</span><span class="pun">(</span><span class="pln"> layerName </span><span class="pun">==</span><span class="pln"> </span><span class="str">"Bullet (Enemy)"</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> layerName </span><span class="pun">==</span><span class="pln"> </span><span class="str">"Enemy"</span><span class="pun">)</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                        </span><span class="com">// Explode</span><span class="pln">
                        spaceship</span><span class="pun">.</span><span class="typ">Explosion</span><span class="pun">();</span><span class="pln">

                        </span><span class="com">// Delete the player</span><span class="pln">
                        </span><span class="typ">Destroy</span><span class="pln"> </span><span class="pun">(</span><span class="pln">gameObject</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre>
</div>
<p>Play the game. Now, OnTriggerExit2D should not be called.</p>

<h2><a id="h9-2"></a>9.2. Correcting Spaceship.cs and Enemy.cs</h2>
<p>Player.cs and Enemy.cs shared a common Move method in Spaceship.cs, but now that Player.cs isn’t using it, let’s fix things up.</p>
<div class="source-code">
<p class="caption">Spaceship.cs</p>
<pre style="" class="source prettyprint prettyprinted"><span class="kwd">using</span><span class="pln"> </span><span class="typ">UnityEngine</span><span class="pun">;</span><span class="pln">

</span><span class="pun">[</span><span class="typ">RequireComponent</span><span class="pun">(</span><span class="kwd">typeof</span><span class="pun">(</span><span class="typ">Rigidbody2D</span><span class="pun">))]</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Spaceship</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">MonoBehaviour</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
        </span><span class="com">// Movement speed</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> speed</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Interval at which to fire bullets</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> shotDelay</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Bullet prefab</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">GameObject</span><span class="pln"> bullet</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Whether to shoot bullets</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> canShot</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Explosion prefab</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">GameObject</span><span class="pln"> explosion</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Make an explosion</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Explosion</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Instantiate</span><span class="pln"> </span><span class="pun">(</span><span class="pln">explosion</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">position</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">rotation</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Make a bullet</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Shot</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Transform</span><span class="pln"> origin</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Instantiate</span><span class="pln"> </span><span class="pun">(</span><span class="pln">bullet</span><span class="pun">,</span><span class="pln"> origin</span><span class="pun">.</span><span class="pln">position</span><span class="pun">,</span><span class="pln"> origin</span><span class="pun">.</span><span class="pln">rotation</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre>
</div>
<div class="source-code">
<p class="caption">Enemy.cs</p>
<pre style="" class="source prettyprint prettyprinted"><span class="kwd">using</span><span class="pln"> </span><span class="typ">UnityEngine</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Collections</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Enemy</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">MonoBehaviour</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
        </span><span class="com">// Spaceship Component</span><span class="pln">
        </span><span class="typ">Spaceship</span><span class="pln"> spaceship</span><span class="pun">;</span><span class="pln">

        </span><span class="typ">IEnumerator</span><span class="pln"> </span><span class="typ">Start</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">

                </span><span class="com">// Get the Spaceship component</span><span class="pln">
                spaceship </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GetComponent</span><span class="pun">&lt;</span><span class="typ">Spaceship</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">();</span><span class="pln">

                </span><span class="com">// Move in the negative direction of the Y-Axis</span><span class="pln">
                </span><span class="typ">Move</span><span class="pln"> </span><span class="pun">(</span><span class="pln">transform</span><span class="pun">.</span><span class="pln">up </span><span class="pun">*</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// If canShot is false, end the coroutine here.</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">spaceship</span><span class="pun">.</span><span class="pln">canShot </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                        </span><span class="kwd">yield</span><span class="pln"> </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">

                </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">true</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

                        </span><span class="com">// Get the child objects</span><span class="pln">
                        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">childCount</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

                                </span><span class="typ">Transform</span><span class="pln"> shotPosition </span><span class="pun">=</span><span class="pln"> transform</span><span class="pun">.</span><span class="typ">GetChild</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i</span><span class="pun">);</span><span class="pln">

                                </span><span class="com">// Fire a bullet at shotPosition’s position/rotation.</span><span class="pln">
                                spaceship</span><span class="pun">.</span><span class="typ">Shot</span><span class="pln"> </span><span class="pun">(</span><span class="pln">shotPosition</span><span class="pun">);</span><span class="pln">
                        </span><span class="pun">}</span><span class="pln">

                        </span><span class="com">// Wait for shotDelay seconds.</span><span class="pln">
                        </span><span class="kwd">yield</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WaitForSeconds</span><span class="pln"> </span><span class="pun">(</span><span class="pln">spaceship</span><span class="pun">.</span><span class="pln">shotDelay</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Move the ship</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Move</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Vector2</span><span class="pln"> direction</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                rigidbody2D</span><span class="pun">.</span><span class="pln">velocity </span><span class="pun">=</span><span class="pln"> direction </span><span class="pun">*</span><span class="pln"> spaceship</span><span class="pun">.</span><span class="pln">speed</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">OnTriggerEnter2D</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Collider2D</span><span class="pln"> c</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Get the Layer name</span><span class="pln">
                </span><span class="kwd">string</span><span class="pln"> layerName </span><span class="pun">=</span><span class="pln"> </span><span class="typ">LayerMask</span><span class="pun">.</span><span class="typ">LayerToName</span><span class="pln"> </span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="pln">gameObject</span><span class="pun">.</span><span class="pln">layer</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Return immediately if the layer is not “Bullet (Player)”</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">layerName </span><span class="pun">!=</span><span class="pln"> </span><span class="str">"Bullet (Player)"</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Delete the bullet</span><span class="pln">
                </span><span class="typ">Destroy</span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="pln">gameObject</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Explode</span><span class="pln">
                spaceship</span><span class="pun">.</span><span class="typ">Explosion</span><span class="pln"> </span><span class="pun">();</span><span class="pln">

                </span><span class="com">// Delete the enemy</span><span class="pln">
                </span><span class="typ">Destroy</span><span class="pln"> </span><span class="pun">(</span><span class="pln">gameObject</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre>
</div>
<div class="column">

<h3><a id="column-28"></a>An Extra Implementation Point for Programmers</h3>
<p>At this point, we could make Spaceship.cs an abstract class. But, to 
avoid confusion for non-programmers, we’ll skip it for this tutorial.</p>
<div class="source-code">
<p class="caption">Spaceship.cs</p>
<pre style="" class="source prettyprint prettyprinted"><span class="kwd">using</span><span class="pln"> </span><span class="typ">UnityEngine</span><span class="pun">;</span><span class="pln">

</span><span class="pun">[</span><span class="typ">RequireComponent</span><span class="pun">(</span><span class="kwd">typeof</span><span class="pun">(</span><span class="typ">Rigidbody2D</span><span class="pun">))]</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">abstract</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Spaceship</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">MonoBehaviour</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
        </span><span class="com">// Movement speed</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> speed</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Interval at which to fire bullets</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> shotDelay</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Bullet prefab</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">GameObject</span><span class="pln"> bullet</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Whether to shoot bullets</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> canShot</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Explosion prefab</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">GameObject</span><span class="pln"> explosion</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Make an explosion</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Explosion</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Instantiate</span><span class="pln"> </span><span class="pun">(</span><span class="pln">explosion</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">position</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">rotation</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Make a bullet</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Shot</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Transform</span><span class="pln"> origin</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Instantiate</span><span class="pln"> </span><span class="pun">(</span><span class="pln">bullet</span><span class="pun">,</span><span class="pln"> origin</span><span class="pun">.</span><span class="pln">position</span><span class="pun">,</span><span class="pln"> origin</span><span class="pun">.</span><span class="pln">rotation</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">protected</span><span class="pln"> </span><span class="kwd">abstract</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Move</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Vector2</span><span class="pln"> direction</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre>
</div>
</div>


    
      <h3>End of Chapter 09</h3>
      <p>That’s all for this section. If you had problems, you can 
download the example project up to this point, and start fresh on the 
next chapter.</p>
      <p></p><section class="ss12" id="ss12"><a class="blue-btn" href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/project/09_ShootingGame.zip">Download This Chapter’s Project File</a></section><p></p>
    

</section>
<!-- ページング -->
<nav class="paging with-top">

  
  
  
  
  
  
  
  

  <a class="prev" rel="prev" href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/08.html">Chapter 08</a>
  <a class="next" rel="next" href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/10.html">Chapter 10</a>
  
</nav>
Page last updated: 2014-04-25
  
</section>

    <script type="text/javascript">
      renderMenu('developer/document');
      hljs.initHighlightingOnLoad();
    </script>

<!-- InstanceEndEditable --><!-- #BeginLibraryItem "/Library/footer-hd.lbi" --> <footer>
    <div class="footer-wrapper clear">
      <div class="left">
        <div class="copy">Copyright ©2015 Unity Technologies Japan G.K. All Rights Reserved</div>
        <ul>
          <li><a href="http://japan.unity3d.com/blog/">Blog</a></li>
          <li><a href="http://japan.unity3d.com/company/contact/">Contact</a></li>
          <li><a href="http://japan.unity3d.com/company/legal">Legal</a></li>
          <li><a href="http://japan.unity3d.com/company/legal/privacy-policy">Privacy Policy</a></li>
        </ul>
      </div>
      <div class="social">
        <a href="http://www.facebook.com/unity3d" class="icon facebook" target="_blank">Facebook</a>
        <a href="http://www.twitter.com/unity_japan" class="icon twitter" target="_blank">Twitter</a>
        <a href="https://plus.google.com/u/0/104568650392955941577/" class="icon googleplus" target="_blank">Google+</a>
      </div>
    </div>
  </footer><!-- #EndLibraryItem --></section>
  <input id="language" value="jp" type="hidden">
</div>
<div class="overlay"></div>

<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-2854981-1']);
  _gaq.push(['_setDomainName', 'unity3d.com']);
  _gaq.push(['_trackPageview']);
  _gaq.push(['b._setAccount', 'UA-32967615-2']);
  _gaq.push(['b._trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


</div></body></html>