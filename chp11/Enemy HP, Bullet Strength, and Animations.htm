<html xmlns:og="http://ogp.me/ns#" xmlns:fb="http://www.facebook.com/2008/fbml" class=" js flexbox flexboxlegacy canvas canvastext webgl no-touch geolocation postmessage no-websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients no-cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!-- base href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/11.html" --><style type="text/css">body { margin-left:0;margin-right:0;margin-top:0; }#google-cache-hdr {background:#f5f5f5 !important;font:13px arial,sans-serif !important;text-align:left !important;color:#202020 !important;border:0 !important;margin:0 !important;border-bottom:1px solid #cecece !important;line-height:16px !important ;padding:16px 28px 24px 28px !important;}#google-cache-hdr * {display:inline !important;font:inherit !important;text-align:inherit !important;color:inherit !important;line-height:inherit !important;background:none !important;border:0 !important;margin:0 !important;padding:0 !important;letter-spacing:0 !important;}#google-cache-hdr a {text-decoration:none !important;color:#1a0dab !important;}#google-cache-hdr a:hover { text-decoration:underline !important; }#google-cache-hdr a:visited { color:#609 !important; }#google-cache-hdr div { display:block !important;margin-top:4px !important; }#google-cache-hdr b {font-weight:bold !important;display:inline-block !important;direction:ltr !important;}</style></head><body class="developer-document" onload="addClass();prettyPrint()"><div id="google-cache-hdr" dir="ltr"><div>Dies ist der Cache von Google von <a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/11.html" dir="ltr">http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/11.html</a>. Es handelt sich dabei um ein Abbild der Seite, wie diese am 25. Sept. 2015 01:57:31 GMT angezeigt wurde. </div><div>Die <a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/11.html" dir="ltr">aktuelle Seite</a> sieht mittlerweile eventuell anders aus. <a href="http://support.google.com/websearch/bin/answer.py?hl=de&amp;p=cached&amp;answer=1687222">Weitere Informationen</a></div><div></div><div><span style="display:inline-block !important;margin-top:8px !important;margin-right:104px !important;white-space:nowrap !important;"><span style="margin-right:28px !important;"><span style="font-weight:bold !important;">Vollständige Version</span></span><span style="margin-right:28px !important;"><a href="http://webcache.googleusercontent.com/search?q=cache:RjCV1uMFXeIJ:japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/11.html&amp;hl=de&amp;gl=at&amp;strip=1&amp;vwsrc=0">Nur-Text-Version</a></span><span style="margin-right:28px !important;"><a href="http://webcache.googleusercontent.com/search?q=cache:RjCV1uMFXeIJ:japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/11.html&amp;hl=de&amp;gl=at&amp;strip=0&amp;vwsrc=1">Quelle anzeigen</a></span></span><span style="display:inline-block !important;margin-top:8px !important;color:#717171 !important;">Tipp: Um Ihren Suchbegriff schnell auf dieser Seite zu finden, drücken Sie <b>Strg+F</b> bzw. <b>⌘-F</b> (Mac) und verwenden Sie die Suchleiste.</span></div></div><div style="position:relative;">




   <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- InstanceBeginEditable name="doctitle" -->
  <!-- InstanceEndEditable -->
  <link rel="shortcut icon" href="http://japan.unity3d.com/resources/favicons/favicon.ico">
  <link rel="icon" type="image/png" href="http://japan.unity3d.com/resources/favicons/favicon.png">
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="http://japan.unity3d.com/resources/favicons/apple-touch-icon-144x144.png">
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="http://japan.unity3d.com/resources/favicons/apple-touch-icon-114x114.png">
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="http://japan.unity3d.com/resources/favicons/apple-touch-icon-72x72.png">
  <link rel="apple-touch-icon-precomposed" href="http://japan.unity3d.com/resources/favicons/apple-touch-icon.png">

  <!-- META -->
  <meta name="description" content="Unity は、Windows と OS X 上で動作する統合型のゲーム開発環境です。iOS、Android、Windows、Mac OS X、Web、Wii U、PlayStation3、Xbox 360 など様々なプラットフォームへ向けた高度な 3D アプリケーションを制作することが出来ます。">
  <meta name="author" content="Unity Technologies">
  <meta property="og:title" content="Unity: 統合ゲーム開発環境">
  <meta property="og:type" content="company">
  <meta property="og:url" content="http://japan.unity3d.com/">
  <meta property="og:image" content="http://japan.unity3d.com/resources/favicons/fb-icon.png">
  <meta property="og:description" content="Unity は、スマートフォンや PC、Webブラウザ、コンシューマ機上でハイクオリティーなゲームを実現する開発プラットフォームです。">
  <meta property="og:site_name" content="Unity Japan 公式サイト">

  <!-- ASSETS -->
  <script src="Enemy%20HP,%20Bullet%20Strength,%20and%20Animations-Dateien/ga.js" async="" type="text/javascript"></script><script src="Enemy%20HP,%20Bullet%20Strength,%20and%20Animations-Dateien/jquery_002.js" type="text/javascript"></script>
  <script type="text/javascript" src="Enemy%20HP,%20Bullet%20Strength,%20and%20Animations-Dateien/unity-core.js"></script>
  <link rel="stylesheet" type="text/css" href="Enemy%20HP,%20Bullet%20Strength,%20and%20Animations-Dateien/core.css">
  <link rel="stylesheet" type="text/css" href="Enemy%20HP,%20Bullet%20Strength,%20and%20Animations-Dateien/resp.css">
  <!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/resources/stylesheets/ie.css" /><![endif]-->
  <link rel="alternate" type="application/rss+xml" title="RSS" href="http://unity3d.com/news.rss">
  <!-- InstanceBeginEditable name="header" -->
    <script type="text/javascript" src="Enemy%20HP,%20Bullet%20Strength,%20and%20Animations-Dateien/jquery.js"></script>
  <!-- InstanceEndEditable -->
  <link rel="stylesheet" type="text/css" href="Enemy%20HP,%20Bullet%20Strength,%20and%20Animations-Dateien/index.css">
  <link rel="stylesheet" type="text/css" href="Enemy%20HP,%20Bullet%20Strength,%20and%20Animations-Dateien/jp.css">
  <link rel="stylesheet" type="text/css" href="Enemy%20HP,%20Bullet%20Strength,%20and%20Animations-Dateien/prettify.css">
  <link rel="stylesheet" type="text/css" href="Enemy%20HP,%20Bullet%20Strength,%20and%20Animations-Dateien/style.css">
  <script type="text/javascript" src="Enemy%20HP,%20Bullet%20Strength,%20and%20Animations-Dateien/prettify.js"></script>
  
  <script type="text/javascript">
    function addClass(){
        $(".source-code pre").addClass("prettyprint");
    }
  </script>
  <title>Enemy HP, Bullet Strength, and Animations</title>


  <div id="master-wrapper">
  <div class="background"></div>
  <header id="master-header" class="master-header" role="main-header">
    <div class="header-wrapper">
      <div class="lang">
        <div class="lbl animate" data-values="lang-selector|width|105|1">言語を切り替え</div>
        <div class="flag flag-jp current tt" data-distance="38|28|bottom"><div class="tip">日本語</div></div>
        <div id="lang-selector" class="lang-selector">
          <div class="flag flag-en tt" data-distance="38|28|bottom"><a href="http://unity3d.com/"></a><div class="tip">English</div></div>
          <div class="flag flag-cn tt" data-distance="38|28|bottom"><a href="http://china.unity3d.com/"></a><div class="tip">中文</div></div>
          <div class="flag flag-es tt" data-distance="38|28|bottom"><a href="http://spanish.unity3d.com/"></a><div class="tip">Español</div></div>
          <div class="flag flag-kr tt" data-distance="38|28|bottom"><a href="http://www.unity3dkorea.com/"></a><div class="tip">한국어</div></div>
          <div class="flag flag-pt tt" data-distance="38|28|bottom"><a href="http://portuguese.unity3d.com/"></a><div class="tip">Portugués</div></div>
          <div class="flag flag-ru tt" data-distance="38|28|bottom"><a href="http://russia.unity3d.com/"></a><div class="tip">Pусский</div></div>
        </div>
      </div>
      <div class="clear"></div>
      <nav class="top-nav">
        <ul>
          <li class="tn-icon"><a href="http://japan.unity3d.com/">Home</a></li>
          <li class="tn-unity"><a href="http://japan.unity3d.com/unity">Unity</a></li>
          <li class="tn-gallery"><a href="http://japan.unity3d.com/gallery">Gallery</a></li>
          <li class="tn-store"><a href="http://japan.unity3d.com/store">Store</a></li>
          <li class="tn-assetstore"><a href="http://japan.unity3d.com/asset-store">Asset Store</a></li>
          <li class="tn-developer selected"><a href="http://japan.unity3d.com/developer">Developer</a></li>
          <li class="tn-company"><a href="http://japan.unity3d.com/company">Company</a></li>
          <li class="tn-download"><a href="http://japan.unity3d.com/unity/download">Download</a></li>
        </ul>
      </nav>
      <nav class="sub-nav">
        <ul id="sn-unity" style="display:none;">
          <li class="sn-unity-workflow jp"><a href="http://japan.unity3d.com/unity/workflow">ワークフロー</a></li>
          <li class="sn-unity-quality jp"><a href="http://japan.unity3d.com/unity/quality">クオリティー</a></li>
          <li class="sn-unity-mecanim"><a href="http://japan.unity3d.com/unity/mecanim">Mecanim</a></li>
          <li class="sn-unity-performance jp"><a href="http://japan.unity3d.com/unity/performance">パフォーマンス</a></li>
          <li class="sn-unity-multiplatform jp"><a href="http://japan.unity3d.com/unity/multiplatform">マルチプラットフォーム</a></li>
          <li class="sn-unity-collaboration jp"><a href="http://japan.unity3d.com/unity/collaboration">コラボレーション</a></li>
          <li class="sn-unity-whatsnew jp"><a href="http://japan.unity3d.com/unity/whats-new">アップデート情報</a></li>
        </ul>
        <ul id="sn-gallery" style="display:none;">
          <li class="sn-gallery-madewith"><a href="http://japan.unity3d.com/gallery/made-with-unity/game-list">Made With Unity</a></li>
          <li class="sn-gallery-demos"><a href="http://japan.unity3d.com/gallery/demos">Demos By Unity</a></li>
        </ul>
        <ul id="sn-assetstore" style="display:none;">
          <li class="sn-assetstore-browse"><a href="https://www.assetstore.unity3d.com/" target="_blank">ブラウズ</a></li>
          <li class="sn-assetstore-onlineservices jp"><a href="http://japan.unity3d.com/asset-store/online-services">オンラインサービス</a></li>
          <li class="sn-assetstore-submit jp"><a href="http://japan.unity3d.com/asset-store/submit-content">コンテンツ提出</a></li>
        </ul>
        <ul id="sn-developer">
          <li class="sn-developer-document jp selected"><a href="http://japan.unity3d.com/developer/document">ドキュメント</a></li>
          <li class="sn-developer-resource jp"><a href="http://japan.unity3d.com/developer/resource">リソース</a></li>
        </ul>
        <ul id="sn-community" style="display:none;">
          <li class="sn-community-forum jp"><a href="http://forum.unity3d.com/" target="_blank">フォーラム</a></li>
          <li class="sn-community-answers jp"><a href="http://answers.unity3d.com/" target="_blank">アンサー</a></li>
          <li class="sn-community-feedback jp"><a href="http://feedback.unity3d.com/" target="_blank">フィードバック</a></li>
        </ul>
        <ul id="sn-company" style="display:none;">
          <li class="sn-company-people jp"><a href="http://japan.unity3d.com/company/people">スタッフ</a></li>
          <li class="sn-company-jobs jp"><a href="http://japan.unity3d.com/company/jobs/overview">採用情報</a></li>
          <li class="sn-company-events jp"><a href="http://japan.unity3d.com/company/events">イベント</a></li>
          <li class="sn-company-pr jp"><a href="http://japan.unity3d.com/company/public-relations">広報</a></li>
          <li class="sn-company-union jp"><a href="http://japan.unity3d.com/company/union">Union</a></li>
          <li class="sn-company-reseller jp"><a href="http://japan.unity3d.com/company/reseller">代理店</a></li>
          <li class="sn-company-blog jp"><a href="http://japan.unity3d.com/blog">ブログ</a></li>
          <li class="sn-company-access jp"><a href="http://japan.unity3d.com/company/access">アクセス</a></li>
          <li class="sn-company-contact jp"><a href="http://japan.unity3d.com/company/contact">お問い合わせ</a></li>
          <li class="sn-company-legal jp"><a href="http://japan.unity3d.com/company/legal">リーガル</a></li>
        </ul>
        <ul id="sn-unite" style="display:none;">
          <li class="sn-unite-unite"><a href="http://japan.unity3d.com/unite/">Unite 2014</a></li>
          <li class="sn-unite-archive"><a href="http://japan.unity3d.com/unite/archive">アーカイブ</a></li>
        </ul>
      </nav>
    </div>
  </header>
  <section id="content-container" class="content-container">
    <header class="mq-header clear">
      <div class="mq-icon"><a href="http://japan.unity3d.com/developer/"></a></div>
      <div class="mq-langbtn rel">
        <div class="flag flag-jp"></div>
        <div id="flag-list"></div>
      </div>
       <div class="mq-navbtn"><div class="icon-bar"></div><div class="icon-bar"></div><div class="icon-bar"></div></div>
    </header>
    <!-- InstanceBeginEditable name="main-content" -->
      <div class="hero"><div class="sams"><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/">Shooting Game</a></div></div>
      <nav class="section-nav">
        <div class="g12"><div class="wrap"><h2></h2>
          <ul>
            
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/01.html">cp01</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/02.html">cp02</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/03.html">cp03</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/04.html">cp04</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/05.html">cp05</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/06.html">cp06</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/07.html">cp07</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/08.html">cp08</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/09.html">cp09</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/10.html">cp10</a></li>
              
              <li class="selected"><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/11.html">cp11</a></li>
              
              <li><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/12.html">cp12</a></li>
          <li class="top"></li></ul>
        </div></div>
      </nav>

    <section id="content" class="content-wrapper gw clear 2d-shooting-game">


      <!-- <nav class="quickjump shrink pos-fix" data-pos-fix-off-y="50">
        <div class="header">
          <h3>Quick jump:</h3>
          <div class="clear"></div>
        </div>
        <ul class="simple">
          <li><a href="#ss01">第 1 回　世界の「骨格」をつくろう</a></li>
          <li><a href="#ss02">Unity を手に入れる</a></li>
          <li><a href="#ss03">Unity の統合開発環境</a></li>
          <li><a href="#ss04">必要なパーツを配置しよう</a></li>
          <li><a href="#ss05">はじめてのスクリプト</a></li>
          <li><a href="#ss06">まとめと次回のテーマ</a></li>
          <li><a href="#ss07">プロジェクトファイルをダウンロード</a></li>
        </ul>
      </nav> -->

<section class="content">

       <article>
        <div style="float:right"><a href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game/game/11.html">日本語</a> | English</div>
        <div class="clear"></div>
      </article>


    <h1><a id="h11"></a>Chapter 11. Enemy HP, Bullet Strength, and Animations</h1>
<p>In the last chapter we added a title screen, so now our game has a clear “start” and “finish.”</p>
<p>Next, we’ll make the game more interesting by implementing some 
common gameplay elements like “HP” (hit points), “attack power” for the 
bullets, “damage animations” for the enemies, and “invincibility 
animation” for the player.</p>

<h2><a id="h11-1"></a>11.1. Implementing HP and Attack Power</h2>
<p>First, add hit points to Enemy.cs.</p>
<div class="source-code">
<p class="caption">Enemy.cs</p>
<pre style="" class="source prettyprint prettyprinted"><span class="kwd">using</span><span class="pln"> </span><span class="typ">UnityEngine</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Collections</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Enemy</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">MonoBehaviour</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
        </span><span class="com">// Hit Points</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> hp </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Spaceship Component</span><span class="pln">
        </span><span class="typ">Spaceship</span><span class="pln"> spaceship</span><span class="pun">;</span><span class="pln">

        </span><span class="typ">IEnumerator</span><span class="pln"> </span><span class="typ">Start</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">

                </span><span class="com">// Get the Spaceship component</span><span class="pln">
                spaceship </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GetComponent</span><span class="pun">&lt;</span><span class="typ">Spaceship</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">();</span><span class="pln">

                </span><span class="com">// Move in the negative direction of the Y-Axis</span><span class="pln">
                </span><span class="typ">Move</span><span class="pln"> </span><span class="pun">(</span><span class="pln">transform</span><span class="pun">.</span><span class="pln">up </span><span class="pun">*</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// If canShot is false, end the coroutine here.</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">spaceship</span><span class="pun">.</span><span class="pln">canShot </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                        </span><span class="kwd">yield</span><span class="pln"> </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">

                </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">true</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

                        </span><span class="com">// Get the child objects</span><span class="pln">
                        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">childCount</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

                                </span><span class="typ">Transform</span><span class="pln"> shotPosition </span><span class="pun">=</span><span class="pln"> transform</span><span class="pun">.</span><span class="typ">GetChild</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i</span><span class="pun">);</span><span class="pln">

                                </span><span class="com">// Fire a bullet at shotPosition’s position/rotation.</span><span class="pln">
                                spaceship</span><span class="pun">.</span><span class="typ">Shot</span><span class="pln"> </span><span class="pun">(</span><span class="pln">shotPosition</span><span class="pun">);</span><span class="pln">
                        </span><span class="pun">}</span><span class="pln">

                        </span><span class="com">// Wait for shotDelay seconds.</span><span class="pln">
                        </span><span class="kwd">yield</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WaitForSeconds</span><span class="pln"> </span><span class="pun">(</span><span class="pln">spaceship</span><span class="pun">.</span><span class="pln">shotDelay</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Move the ship</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Move</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Vector2</span><span class="pln"> direction</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                rigidbody2D</span><span class="pun">.</span><span class="pln">velocity </span><span class="pun">=</span><span class="pln"> direction </span><span class="pun">*</span><span class="pln"> spaceship</span><span class="pun">.</span><span class="pln">speed</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">OnTriggerEnter2D</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Collider2D</span><span class="pln"> c</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Get the Layer name</span><span class="pln">
                </span><span class="kwd">string</span><span class="pln"> layerName </span><span class="pun">=</span><span class="pln"> </span><span class="typ">LayerMask</span><span class="pun">.</span><span class="typ">LayerToName</span><span class="pln"> </span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="pln">gameObject</span><span class="pun">.</span><span class="pln">layer</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Return immediately if the layer is not “Bullet (Player)”</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">layerName </span><span class="pun">!=</span><span class="pln"> </span><span class="str">"Bullet (Player)"</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Delete the bullet</span><span class="pln">
                </span><span class="typ">Destroy</span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="pln">gameObject</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Explode</span><span class="pln">
                spaceship</span><span class="pun">.</span><span class="typ">Explosion</span><span class="pln"> </span><span class="pun">();</span><span class="pln">

                </span><span class="com">// Delete the enemy</span><span class="pln">
                </span><span class="typ">Destroy</span><span class="pln"> </span><span class="pun">(</span><span class="pln">gameObject</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre>
</div>
<p>Next, add attack power to <b>Bullet.cs</b>.</p>
<div class="source-code">
<p class="caption">Bullet.cs</p>
<pre style="" class="source prettyprint prettyprinted"><span class="kwd">using</span><span class="pln"> </span><span class="typ">UnityEngine</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Bullet</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">MonoBehaviour</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
        </span><span class="com">// Bullet Movement Speed</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> speed </span><span class="pun">=</span><span class="pln"> </span><span class="lit">10</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// How long between this object’s creation, and its deletion</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> lifeTime </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Attack Power</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> power </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">

        </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Start</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Move in the positive Y-Axis of the local coordinate system.</span><span class="pln">
                rigidbody2D</span><span class="pun">.</span><span class="pln">velocity </span><span class="pun">=</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">up</span><span class="pun">.</span><span class="pln">normalized </span><span class="pun">*</span><span class="pln"> speed</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// After lifeTime seconds, delete the bullet.</span><span class="pln">
                </span><span class="typ">Destroy</span><span class="pln"> </span><span class="pun">(</span><span class="pln">gameObject</span><span class="pun">,</span><span class="pln"> lifeTime</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre>
</div>

<h3><a id="h11-1-1"></a>Explode When Hit Points Are Zero</h3>
<p>In Enemy.cs, in the OnTriggerEnter2D method, we’ll implement code to handle the loss of hit points.</p>
<p>The number of hit points to reduct is the attack power returned by the bullet.</p>
<div class="source-code">
<p class="caption">Enemy.cs</p>
<pre style="" class="source prettyprint prettyprinted"><span class="kwd">using</span><span class="pln"> </span><span class="typ">UnityEngine</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Collections</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Enemy</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">MonoBehaviour</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
        </span><span class="com">// Hit Points</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> hp </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Spaceship Component</span><span class="pln">
        </span><span class="typ">Spaceship</span><span class="pln"> spaceship</span><span class="pun">;</span><span class="pln">

        </span><span class="typ">IEnumerator</span><span class="pln"> </span><span class="typ">Start</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">

                </span><span class="com">// Get the Spaceship component</span><span class="pln">
                spaceship </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GetComponent</span><span class="pun">&lt;</span><span class="typ">Spaceship</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">();</span><span class="pln">

                </span><span class="com">// Move in the negative direction of the Y-Axis</span><span class="pln">
                </span><span class="typ">Move</span><span class="pln"> </span><span class="pun">(</span><span class="pln">transform</span><span class="pun">.</span><span class="pln">up </span><span class="pun">*</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// If canShot is false, end the coroutine here.</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">spaceship</span><span class="pun">.</span><span class="pln">canShot </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                        </span><span class="kwd">yield</span><span class="pln"> </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">

                </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">true</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

                        </span><span class="com">// Get the child objects</span><span class="pln">
                        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">childCount</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

                                </span><span class="typ">Transform</span><span class="pln"> shotPosition </span><span class="pun">=</span><span class="pln"> transform</span><span class="pun">.</span><span class="typ">GetChild</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i</span><span class="pun">);</span><span class="pln">

                                </span><span class="com">// Fire a bullet at shotPosition’s position/rotation.</span><span class="pln">
                                spaceship</span><span class="pun">.</span><span class="typ">Shot</span><span class="pln"> </span><span class="pun">(</span><span class="pln">shotPosition</span><span class="pun">);</span><span class="pln">
                        </span><span class="pun">}</span><span class="pln">

                        </span><span class="com">// Wait for shotDelay seconds.</span><span class="pln">
                        </span><span class="kwd">yield</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WaitForSeconds</span><span class="pln"> </span><span class="pun">(</span><span class="pln">spaceship</span><span class="pun">.</span><span class="pln">shotDelay</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Move the ship</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Move</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Vector2</span><span class="pln"> direction</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                rigidbody2D</span><span class="pun">.</span><span class="pln">velocity </span><span class="pun">=</span><span class="pln"> direction </span><span class="pun">*</span><span class="pln"> spaceship</span><span class="pun">.</span><span class="pln">speed</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">OnTriggerEnter2D</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Collider2D</span><span class="pln"> c</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Get the Layer name</span><span class="pln">
                </span><span class="kwd">string</span><span class="pln"> layerName </span><span class="pun">=</span><span class="pln"> </span><span class="typ">LayerMask</span><span class="pun">.</span><span class="typ">LayerToName</span><span class="pln"> </span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="pln">gameObject</span><span class="pun">.</span><span class="pln">layer</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Return immediately if the layer is not “Bullet (Player)”</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">layerName </span><span class="pun">!=</span><span class="pln"> </span><span class="str">"Bullet (Player)"</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Get the PlayerBullet’s Transform</span><span class="pln">
                </span><span class="typ">Transform</span><span class="pln"> playerBulletTransform </span><span class="pun">=</span><span class="pln"> c</span><span class="pun">.</span><span class="pln">transform</span><span class="pun">.</span><span class="pln">parent</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Get the Bullet component</span><span class="pln">
                </span><span class="typ">Bullet</span><span class="pln"> bullet </span><span class="pun">=</span><span class="pln">  playerBulletTransform</span><span class="pun">.</span><span class="typ">GetComponent</span><span class="pun">&lt;</span><span class="typ">Bullet</span><span class="pun">&gt;();</span><span class="pln">

                </span><span class="com">// Deduct the hit points</span><span class="pln">
                hp </span><span class="pun">=</span><span class="pln"> hp </span><span class="pun">-</span><span class="pln"> bullet</span><span class="pun">.</span><span class="pln">power</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Delete the bullet</span><span class="pln">
                </span><span class="typ">Destroy</span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="pln">gameObject</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// if the hit points fall to 0 or less…</span><span class="pln">
                </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">hp </span><span class="pun">&lt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                        </span><span class="com">// Explode</span><span class="pln">
                        spaceship</span><span class="pun">.</span><span class="typ">Explosion</span><span class="pln"> </span><span class="pun">();</span><span class="pln">

                        </span><span class="com">// Delete the enemy</span><span class="pln">
                        </span><span class="typ">Destroy</span><span class="pln"> </span><span class="pun">(</span><span class="pln">gameObject</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre>
</div>
<p>Select the 3 Enemy objects in the Wave prefab, and set their <b>HP to 10</b>.</p>
<div class="image">
<img src="img/1.png" alt="">
</div>
<p>Now play the game. The enemies will not explode unless the appropriate number of player bullets hits them.</p>

<h2><a id="h11-2"></a>11.2. Illustrating the Damage</h2>
<div class="image">
<img src="img/2.png" alt="">
</div>
<p>To make it easy to see when the enemy receives damage, we’ll make their ships turn red.</p>

<h3><a id="h11-2-1"></a>Make an Animator Layer</h3>
<div class="image">
<img src="img/3.png" alt="Making a new layer to show when damage is received (finished result)">
<p class="caption">
Figure 11.1: Making a new layer to show when damage is received (finished result)
</p>
</div>
<p>Enemies have a normal animation, meaning that their sprite is being 
cycled. We will “superimpose” a red color-change animation on top of 
this Normal animation.</p>

<h4><a id="h11-2-1-1"></a>Make a Layer</h4>
<p>Make a layer, name it <b>Damage Layer</b>, and set the <b>Weight to 1</b>.</p>
<p></p><div style="display:flex"><p></p>
<div class="image">
<img src="img/4.png" alt="Add a Layer" width="90%">
<p class="caption">
Figure 11.2: Add a Layer
</p>
</div>
<div class="image">
<img src="img/5.png" alt="Changing the layer’s weight" width="90%">
<p class="caption">
Figure 11.3: Changing the layer’s weight
</p>
</div>
<p></p></div><p></p>
<p>Using the Override value for Blending, setting Weight to 1 is a way 
of saying “use the color animation in the Damage Layer, even if other 
layers are animating the same color.”</p>

<h4><a id="h11-2-1-2"></a>Make a Damage Animation</h4>
<p>Right-click on the Enemy folder, and select “Create -&gt; Animation” 
from the menu item to create an Animation asset. Set the name to Damage.</p>
<div class="image">
<img src="img/6.png" alt="You can create assets within folders using their right-click menus." width="90%">
<p class="caption">
Figure 11.4: You can create assets within folders using their right-click menus.
</p>
</div>
<p>To register this animation with the animator, drag and drop it into the Damage Layer of the Animator.</p>
<div class="image">
<img src="img/7.png" alt="">
</div>
<p>Next we’ll make the animation. Drag and drop one Enemy prefab into the scene.</p>
<div class="image">
<img src="img/8.png" alt="">
</div>
<p>While the Enemy game object is selected, choose "Window -&gt; Animation" in the menu to open up the Animation window.</p>
<p>Upon opening, the Normal animation will be shown, so change this to Damage.</p>
<div class="image">
<img src="img/9.png" alt="">
</div>
<p>Register a property to animate by clicking Add Curve, and selecting “Sprite Renderer -&gt; Color.”</p>
<div class="image">
<img src="img/10.png" alt="">
</div>
<p>This will cause two Keys to be created, delete the one on the right, 
as we won’t be using it. Right-click the key and select Delete Keys.</p>
<div class="image">
<img src="img/11.png" alt="">
</div>
<p>Now there’s two things left to do in the Animation window.</p>
<p>First, move the Key from frame 0 to frame 5 by dragging the topmost 
Key to frame 5. You can check the frame in the upper-left of the 
Animation window.</p>
<p>Next change the color values. Set <b>Color.r to 1</b>, <b>Color.g to 0</b>, <b>Color.b to 0.6</b>, and <b>Color.a to 1</b>.</p>
<div class="image">
<img src="img/12.png" alt="">
</div>
<p>You can preview the color-change in the Inspector.</p>
<div class="image">
<img src="img/13.png" alt="">
</div>

<h4><a id="h11-2-1-3"></a>Make a Trigger</h4>
<p>We only want the enemy to be red when receiving damage, so we’ll use Triggers to do exactly that.</p>
<p>Make an empty state in the animator. Right-click in the Animator window, and select the “Create State -&gt; Empty” menu item.</p>
<div class="image">
<img src="img/14.png" alt="">
</div>
<p>Set the name to Dummy. You can change the name in the Inspector, just click the state and it will be displayed in the Inspector.</p>
<div class="image">
<img src="img/15.png" alt="">
</div>
<p>Now we need to set Dummy to the default. Right-click on the Dummy 
state and select “Set as Default.” The “default state” indicates which 
animation state will be played back right after the game starts. The way
 things are now, the Damage Layer’s Dummy state will be played back, and
 no other animation will be used.</p>
<div class="image">
<img src="img/16.png" alt="">
</div>
<p>Next, we'll use Triggers to to loop between playing back the Damage animation and not playing back any animation.</p>
<p>Right-click on the Dummy, and choose Make Transition.</p>
<div class="image">
<img src="img/17.png" alt="">
</div>
<p>An arrow will follow the mouse cursor. Click on the Damage state. Now
 we can set up conditions for transitioning from the Dummy state to the 
Damage state.</p>
<div class="image">
<img src="img/18.png" alt="">
</div>
<p>In the same way, create a Transition from the Damage state to the Dummy state.</p>
<div class="image">
<img src="img/19.png" alt="">
</div>
<p>Next, create a Trigger. In the lower left of the Animator window, click the plus button in Parameters and select Trigger.</p>
<div class="image">
<img src="img/20.png" alt="">
</div>
<p>Name it Damage.</p>
<div class="image">
<img src="img/21.png" alt="">
</div>
<p>Click the Transition from the Dummy state to the Damage state, and in
 the Inspector that appears, update Conditions to Damage. We don’t need 
to do anything to the Transition from the Damage state to the Dummy 
state.</p>
<p></p><div style="display:flex"><p></p>
<div class="image">
<img src="img/22.png" alt="Setting Conditions to Damage" width="90%">
<p class="caption">
Figure 11.5: Setting Conditions to Damage
</p>
</div>
<div class="image">
<img src="img/23.png" alt="No changes are needed for this Transition." width="90%">
<p class="caption">
Figure 11.6: No changes are needed for this Transition.
</p>
</div>
<p></p></div><p></p>

<h3><a id="h11-2-2"></a>Setting the Trigger in Script</h3>
<p>We want to “set the trigger” when damage is received, in order to play the Damage animation.</p>
<p>First, in <b>Spaceship.cs</b> we’ll get the Animator component.</p>
<div class="source-code">
<p class="caption">Spaceship.cs</p>
<pre style="" class="source prettyprint prettyprinted"><span class="kwd">using</span><span class="pln"> </span><span class="typ">UnityEngine</span><span class="pun">;</span><span class="pln">

</span><span class="pun">[</span><span class="typ">RequireComponent</span><span class="pun">(</span><span class="kwd">typeof</span><span class="pun">(</span><span class="typ">Rigidbody2D</span><span class="pun">),</span><span class="pln"> </span><span class="kwd">typeof</span><span class="pun">(</span><span class="typ">Animator</span><span class="pun">))]</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Spaceship</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">MonoBehaviour</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
        </span><span class="com">// Movement speed</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> speed</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Interval at which to fire bullets</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> shotDelay</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Bullet prefab</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">GameObject</span><span class="pln"> bullet</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Whether to shoot bullets</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> canShot</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Explosion prefab</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">GameObject</span><span class="pln"> explosion</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Animator Component</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Animator</span><span class="pln"> animator</span><span class="pun">;</span><span class="pln">

        </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Start</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Get the Animator component</span><span class="pln">
                animator </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GetComponent</span><span class="pun">&lt;</span><span class="typ">Animator</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">();</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Make an explosion</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Explosion</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Instantiate</span><span class="pln"> </span><span class="pun">(</span><span class="pln">explosion</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">position</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">rotation</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Make a bullet</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Shot</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Transform</span><span class="pln"> origin</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Instantiate</span><span class="pln"> </span><span class="pun">(</span><span class="pln">bullet</span><span class="pun">,</span><span class="pln"> origin</span><span class="pun">.</span><span class="pln">position</span><span class="pun">,</span><span class="pln"> origin</span><span class="pun">.</span><span class="pln">rotation</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Return the Animator component</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Animator</span><span class="pln"> </span><span class="typ">GetAnimator</span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">return</span><span class="pln"> animator</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre>
</div>
<p>Within the OnTriggerEnter2D method, we’ll add code to the HP check to say “if the HP is above 0, set the Damage trigger.”</p>
<div class="source-code">
<p class="caption">Enemy.cs</p>
<pre style="" class="source prettyprint prettyprinted"><span class="kwd">using</span><span class="pln"> </span><span class="typ">UnityEngine</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Collections</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Enemy</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">MonoBehaviour</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
        </span><span class="com">// Hit Points</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> hp </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Spaceship Component</span><span class="pln">
        </span><span class="typ">Spaceship</span><span class="pln"> spaceship</span><span class="pun">;</span><span class="pln">

        </span><span class="typ">IEnumerator</span><span class="pln"> </span><span class="typ">Start</span><span class="pln"> </span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">

                </span><span class="com">// Get the Spaceship component</span><span class="pln">
                spaceship </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GetComponent</span><span class="pun">&lt;</span><span class="typ">Spaceship</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">();</span><span class="pln">

                </span><span class="com">// Move in the negative direction of the Y-Axis</span><span class="pln">
                </span><span class="typ">Move</span><span class="pln"> </span><span class="pun">(</span><span class="pln">transform</span><span class="pun">.</span><span class="pln">up </span><span class="pun">*</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// If canShot is false, end the coroutine here.</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">spaceship</span><span class="pun">.</span><span class="pln">canShot </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                        </span><span class="kwd">yield</span><span class="pln"> </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">

                </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">true</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

                        </span><span class="com">// Get the child objects</span><span class="pln">
                        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> transform</span><span class="pun">.</span><span class="pln">childCount</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

                                </span><span class="typ">Transform</span><span class="pln"> shotPosition </span><span class="pun">=</span><span class="pln"> transform</span><span class="pun">.</span><span class="typ">GetChild</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i</span><span class="pun">);</span><span class="pln">

                                </span><span class="com">// Fire a bullet at shotPosition’s position/rotation.</span><span class="pln">
                                spaceship</span><span class="pun">.</span><span class="typ">Shot</span><span class="pln"> </span><span class="pun">(</span><span class="pln">shotPosition</span><span class="pun">);</span><span class="pln">
                        </span><span class="pun">}</span><span class="pln">

                        </span><span class="com">// Wait for shotDelay seconds.</span><span class="pln">
                        </span><span class="kwd">yield</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WaitForSeconds</span><span class="pln"> </span><span class="pun">(</span><span class="pln">spaceship</span><span class="pun">.</span><span class="pln">shotDelay</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Move the ship</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Move</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Vector2</span><span class="pln"> direction</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                rigidbody2D</span><span class="pun">.</span><span class="pln">velocity </span><span class="pun">=</span><span class="pln"> direction </span><span class="pun">*</span><span class="pln"> spaceship</span><span class="pun">.</span><span class="pln">speed</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">OnTriggerEnter2D</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Collider2D</span><span class="pln"> c</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Get the Layer name</span><span class="pln">
                </span><span class="kwd">string</span><span class="pln"> layerName </span><span class="pun">=</span><span class="pln"> </span><span class="typ">LayerMask</span><span class="pun">.</span><span class="typ">LayerToName</span><span class="pln"> </span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="pln">gameObject</span><span class="pun">.</span><span class="pln">layer</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Return immediately if the layer is not “Bullet (Player)”</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">layerName </span><span class="pun">!=</span><span class="pln"> </span><span class="str">"Bullet (Player)"</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Get the PlayerBullet’s Transform</span><span class="pln">
                </span><span class="typ">Transform</span><span class="pln"> playerBulletTransform </span><span class="pun">=</span><span class="pln"> c</span><span class="pun">.</span><span class="pln">transform</span><span class="pun">.</span><span class="pln">parent</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Get the Bullet component</span><span class="pln">
                </span><span class="typ">Bullet</span><span class="pln"> bullet </span><span class="pun">=</span><span class="pln">  playerBulletTransform</span><span class="pun">.</span><span class="typ">GetComponent</span><span class="pun">&lt;</span><span class="typ">Bullet</span><span class="pun">&gt;();</span><span class="pln">

                </span><span class="com">// Deduct the hit points</span><span class="pln">
                hp </span><span class="pun">=</span><span class="pln"> hp </span><span class="pun">-</span><span class="pln"> bullet</span><span class="pun">.</span><span class="pln">power</span><span class="pun">;</span><span class="pln">

                </span><span class="com">// Delete the bullet</span><span class="pln">
                </span><span class="typ">Destroy</span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="pln">gameObject</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// if the hit points fall to 0 or less…</span><span class="pln">
                </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">hp </span><span class="pun">&lt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                        </span><span class="com">// Explode</span><span class="pln">
                        spaceship</span><span class="pun">.</span><span class="typ">Explosion</span><span class="pln"> </span><span class="pun">();</span><span class="pln">

                        </span><span class="com">// Delete the enemy</span><span class="pln">
                        </span><span class="typ">Destroy</span><span class="pln"> </span><span class="pun">(</span><span class="pln">gameObject</span><span class="pun">);</span><span class="pln">

                </span><span class="pun">}</span><span class="kwd">else</span><span class="pun">{</span><span class="pln">

                        spaceship</span><span class="pun">.</span><span class="typ">GetAnimator</span><span class="pun">().</span><span class="typ">SetTrigger</span><span class="pun">(</span><span class="str">"Damage"</span><span class="pun">);</span><span class="pln">

                </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre>
</div>
<p>Lastly, delete the Enemy game object, and play the game.</p>
<p>When bullets hit the enemy, it will turn red. But it’s slowly turning red, and slowly fading back to the original color.</p>
<p>One more time, go the Transition inspector of the Animator.</p>
<p>As shown in Figure 11.7 and Figure 11.8, inspect the Transition from 
Dummy to Damage, and set the the two handles of the Fade transition to 
be as close as possible.</p>
<p></p><div style="display:flex"><p></p>
<div class="image">
<img src="img/24.png" alt="" width="90%">
<p class="caption">
Figure 11.7: 
</p>
</div>
<div class="image">
<img src="img/25.png" alt="" width="90%">
<p class="caption">
Figure 11.8: 
</p>
</div>
<p></p></div><p></p>
<p>Do the same settings for the Transition from the Damage state to the Dummy state. Also, set <b>Exit Time to 1</b>.</p>
<p></p><div style="display:flex"><p></p>
<div class="image">
<img src="img/26.png" alt="" width="90%">
<p class="caption">
Figure 11.9: 
</p>
</div>
<div class="image">
<img src="img/27.png" alt="" width="90%">
<p class="caption">
Figure 11.10: 
</p>
</div>
<p></p></div><p></p>
<p>Play the game, and confirm that when damage is received, the enemy instantly turns red.</p>

<h2><a id="h11-3"></a>11.3. Player Invincibility</h2>
<p>Now we’ll implement invincibility for the player, and indicate it by making the player blink rapidly when the game starts.</p>
<p>The basic way of doing this is the same as for the Enemy’s damage animation.</p>

<h3><a id="h11-3-1"></a>Make a Layer</h3>
<p>PDouble-click the Player’s Animator Controller to open the Animator window.</p>
<div class="image">
<img src="img/28.png" alt="">
</div>
<p>Create an Invincible Layer. Don’t forget to set its <b>Weight to 1</b>.</p>
<div class="image">
<img src="img/29.png" alt="">
</div>

<h3><a id="h11-3-2"></a>Make the Animation</h3>
<p>Drag and drop the Player prefab into the scene.</p>
<div class="image">
<img src="img/30.png" alt="">
</div>
<p>Next, create an animation asset. Select the Player folder and right-click, then select “Create -&gt; Animation.”</p>
<div class="image">
<img src="img/31.png" alt="">
</div>
<p>Name this new Animation asset as Invincible.</p>
<div class="image">
<img src="img/32.png" alt="">
</div>
<p>Check the <b>Loop Time</b> box for the <b>Invincible</b> animation.</p>
<div class="image">
<img src="img/33.png" alt="">
</div>
<p>Drag and drop the <b>Invincible</b> animation into the <b>Invincible Layer</b> to create an <b>Invincible</b> state.</p>
<div class="image">
<img src="img/34.png" alt="">
</div>
<p>Select “Create State -&gt; Empty” to make a Dummy state, and make a Transition from the Invincible state to the Dummy state.</p>
<p>Set the Transition’s Exit Time to 3. This will cause the Invincible animation to loop 3 times.</p>
<div class="image">
<img src="img/35.png" alt="">
</div>
<p>Next, make an animation. Select the Player game object, open the Animation window, and select the Invincible animation.</p>
<div class="image">
<img src="img/36.png" alt="">
</div>
<p>Click “Add Curve,” and add “Sprite Renderer -&gt; Enabled” and “Box Collider 2D -&gt; Enabled.”</p>
<p></p><div style="display:flex"><p></p>
<div class="image">
<img src="img/37.png" alt="" width="90%">
<p class="caption">
Figure 11.11: 
</p>
</div>
<div class="image">
<img src="img/38.png" alt="" width="90%">
<p class="caption">
Figure 11.12: 
</p>
</div>
<p></p></div><p></p>
<p>Set the values to off at Frame 0, and on at Frame 60. Delete the Box 
Collider 2D key. Now, when the Invincible animation plays, the collider 
will ignored, disabling collision detection, which achieves the 
invincibility effect we want.</p>
<p></p><div style="display:flex"><p></p>
<div class="image">
<img src="img/39.png" alt="" width="90%">
<p class="caption">
Figure 11.13: 
</p>
</div>
<div class="image">
<img src="img/40.png" alt="" width="90%">
<p class="caption">
Figure 11.14: 
</p>
</div>
<p></p></div><p></p>
<p>Now make Keys at regular intervals that flicker between “off” and 
“on” states. To make this easier, you can copy/paste keys with 
Ctrl/Command+C, move the cursor with your mouse, then paste with 
Command/Ctrl+V.</p>
<div class="image">
<img src="img/41.png" alt="">
</div>
<p>Finally, delete the Player game object, and play the game. When the game starts, the player should be invincible for 3 seconds.</p>


    
      <h3>End of Chapter 11</h3>
      <p>That’s all for this section. If you had problems, you can 
download the example project up to this point, and start fresh on the 
next chapter.</p>
      <p></p><section class="ss12" id="ss12"><a class="blue-btn" href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/project/11_ShootingGame.zip">Download This Chapter’s Project File</a></section><p></p>
    

</section>
<!-- ページング -->
<nav class="paging with-top">

  
  
  
  
  
  
  
  

  <a class="prev" rel="prev" href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/10.html">Chapter 10</a>
  <a class="next" rel="next" href="http://japan.unity3d.com/developer/document/tutorial/2d-shooting-game-en/game/12.html">Chapter 12</a>
  
</nav>
Page last updated: 2014-04-25
  
</section>

    <script type="text/javascript">
      renderMenu('developer/document');
      hljs.initHighlightingOnLoad();
    </script>

<!-- InstanceEndEditable --><!-- #BeginLibraryItem "/Library/footer-hd.lbi" --> <footer>
    <div class="footer-wrapper clear">
      <div class="left">
        <div class="copy">Copyright ©2015 Unity Technologies Japan G.K. All Rights Reserved</div>
        <ul>
          <li><a href="http://japan.unity3d.com/blog/">Blog</a></li>
          <li><a href="http://japan.unity3d.com/company/contact/">Contact</a></li>
          <li><a href="http://japan.unity3d.com/company/legal">Legal</a></li>
          <li><a href="http://japan.unity3d.com/company/legal/privacy-policy">Privacy Policy</a></li>
        </ul>
      </div>
      <div class="social">
        <a href="http://www.facebook.com/unity3d" class="icon facebook" target="_blank">Facebook</a>
        <a href="http://www.twitter.com/unity_japan" class="icon twitter" target="_blank">Twitter</a>
        <a href="https://plus.google.com/u/0/104568650392955941577/" class="icon googleplus" target="_blank">Google+</a>
      </div>
    </div>
  </footer><!-- #EndLibraryItem --></section>
  <input id="language" value="jp" type="hidden">
</div>
<div class="overlay"></div>

<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-2854981-1']);
  _gaq.push(['_setDomainName', 'unity3d.com']);
  _gaq.push(['_trackPageview']);
  _gaq.push(['b._setAccount', 'UA-32967615-2']);
  _gaq.push(['b._trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


</div></body></html>